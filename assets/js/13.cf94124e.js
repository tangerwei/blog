(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{496:function(t,a,s){"use strict";s.r(a);var e=s(4),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("div",{staticClass:"custom-block tip"},[s("p",[t._v("pip从python3.4之后就是默认的包安装工具， 包安装的虚拟环境：venv(3.5版本之后建议使用venv创建"),s("a",{attrs:{href:"https://packaging.python.org/tutorials/installing-packages/#creating-virtual-environments",target:"_blank",rel:"noopener noreferrer"}},[t._v("虚拟环境"),s("OutboundLink")],1),t._v(")， virtualenv，包仓库 "),s("a",{attrs:{href:"https://pypi.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Python Packaging Index"),s("OutboundLink")],1)])]),t._v(" "),s("h3",{attrs:{id:"pip介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pip介绍"}},[t._v("#")]),t._v(" pip介绍")]),t._v(" "),s("h4",{attrs:{id:"用法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#用法"}},[t._v("#")]),t._v(" 用法")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("python -m pip "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" SomePackage\n")])])]),s("div",{staticClass:"custom-block tip"},[s("ol",[s("li",[t._v("对于POSIX用户（包括Mac OS X和Linux用户），本指南中的示例假定使用虚拟环境。")]),t._v(" "),s("li",[t._v("对于Windows用户，本指南中的示例假定在安装Python时选择了调整系统PATH环境变量的选项。")]),t._v(" "),s("li",[t._v("编译环境的之引用路径\n"),s("ul",[s("li",[t._v("默认路径-全局")]),t._v(" "),s("li",[t._v("虚拟路径，并带有详细描述符-局部")]),t._v(" "),s("li",[t._v("两者的优缺点一目了然，并且这种优缺点在所有的语言中都存在，前者安装一次即可，全局可以使用，但是，依赖系统过大，如果换一个系统，这个项目就无法正常启动，需要额外的环境部署，后者虚拟环境有统一描述文件，不依赖系统。所以如果想要移植的项目使用第二种方式(PS：不需要移植的项目还是项目吗？)")])])])])]),t._v(" "),s("h4",{attrs:{id:"扩展用法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#扩展用法"}},[t._v("#")]),t._v(" 扩展用法")]),t._v(" "),s("h5",{attrs:{id:"指定版本-或者指定最小版本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#指定版本-或者指定最小版本"}},[t._v("#")]),t._v(" 指定版本，或者指定最小版本")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("python -m pip "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("SomePackage")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),t._v(".4    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# specific version")]),t._v("\npython -m pip "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"SomePackage>=1.0.4"')]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# minimum version")]),t._v("\n")])])]),s("h5",{attrs:{id:"包升级"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#包升级"}},[t._v("#")]),t._v(" 包升级")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("python -m pip "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" --upgrade SomePackage\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);